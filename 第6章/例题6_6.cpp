/**
  * 本题采用的是这样一个思想（本人称为天才思路）：
  * 当I是奇数时，它是往左走的第(I + 1) / 2个球
  * 当I是偶数时，它是往右走的第I个球
  * I = I / 2是为了让下一层判断是应该往左走还是往右走
  * 举个例子：
  * 因为I = 2对于第一层节点,容易判断往左走还是往右走
  * 但是I = 2对于第2层节点，就不那么容易判断了，因为有部分球走的是第一层结点的左子树
  * 因此需要I = I / 2;
  * I = (I + 1) / 2是为了解决I = 0时的情况。
  * 其实还有一个大众思路（代码参见紫书）
  * 就是模拟二叉树落球s[k]模拟第k个开关的情况
  * s[k] = !s[k];//控制开关的开闭情况
  * s[k] = 0 ? k = k * 2 : k = k * 2 + 1;//控制球到什么地方
  */

#include<stdio.h>
#include<iostream>
using namespace std;

int main(){
    int D,I;
    while(scanf("%d%d",&D,&I)){
        int k = 1;
        for(int i = 0;i < D - 1;i ++){
            if(I % 2 == 1){
                k = k * 2;
                I = (I + 1) / 2;
            }else{
                k = k * 2 + 1;
                I = I / 2;
            }
        }
        printf("%d\n",k);
    }
    return 0;
}
